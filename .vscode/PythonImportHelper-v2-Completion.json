[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "config",
        "importPath": "decouple",
        "description": "decouple",
        "isExtraImport": true,
        "detail": "decouple",
        "documentation": {}
    },
    {
        "label": "Csv",
        "importPath": "decouple",
        "description": "decouple",
        "isExtraImport": true,
        "detail": "decouple",
        "documentation": {}
    },
    {
        "label": "parse",
        "importPath": "dj_database_url",
        "description": "dj_database_url",
        "isExtraImport": true,
        "detail": "dj_database_url",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "auth",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "constants",
        "importPath": "django.contrib.messages",
        "description": "django.contrib.messages",
        "isExtraImport": true,
        "detail": "django.contrib.messages",
        "documentation": {}
    },
    {
        "label": "constants",
        "importPath": "django.contrib.messages",
        "description": "django.contrib.messages",
        "isExtraImport": true,
        "detail": "django.contrib.messages",
        "documentation": {}
    },
    {
        "label": "constants",
        "importPath": "django.contrib.messages",
        "description": "django.contrib.messages",
        "isExtraImport": true,
        "detail": "django.contrib.messages",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "core.asgi",
        "description": "core.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "core.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = config(\"SECRET_KEY\")\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = config(\"DEBUG\", cast=bool, default=False)\nALLOWED_HOSTS = config(\"ALLOWED_HOSTS\", cast=Csv())\n# Application definition\nINSTALLED_APPS = [",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "SECRET_KEY = config(\"SECRET_KEY\")\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = config(\"DEBUG\", cast=bool, default=False)\nALLOWED_HOSTS = config(\"ALLOWED_HOSTS\", cast=Csv())\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DEBUG = config(\"DEBUG\", cast=bool, default=False)\nALLOWED_HOSTS = config(\"ALLOWED_HOSTS\", cast=Csv())\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ALLOWED_HOSTS = config(\"ALLOWED_HOSTS\", cast=Csv())\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"usuarios.apps.UsuariosConfig\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"usuarios.apps.UsuariosConfig\",\n    \"home.apps.HomeConfig\",\n]",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]\nROOT_URLCONF = \"core.urls\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ROOT_URLCONF = \"core.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [os.path.join(BASE_DIR, \"templates\")],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [os.path.join(BASE_DIR, \"templates\")],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "WSGI_APPLICATION = \"core.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    \"default\": config(\n        \"DATABASE_URL\",\n        default=f'sqlite:///{BASE_DIR /   \"db.sqlite3\"}',\n        cast=db_url,\n    )\n}",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": config(\n        \"DATABASE_URL\",\n        default=f'sqlite:///{BASE_DIR /   \"db.sqlite3\"}',\n        cast=db_url,\n    )\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "LANGUAGE_CODE = \"pt-br\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, \"static\")]\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, \"static\")]\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, \"static\")]\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, \"static\")]\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "STATIC_URL = \"static/\"\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, \"static\")]\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "STATICFILES_DIRS = [os.path.join(BASE_DIR, \"static\")]\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "core.urls",
        "description": "core.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path(\"\", include(\"home.urls\")),\n]",
        "detail": "core.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "core.wsgi",
        "description": "core.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "core.wsgi",
        "documentation": {}
    },
    {
        "label": "HomeConfig",
        "kind": 6,
        "importPath": "home.apps",
        "description": "home.apps",
        "peekOfCode": "class HomeConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"home\"",
        "detail": "home.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "home.urls",
        "description": "home.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"index/\", views.index, name=\"index\"),\n    path(\"nossa_equipe/\", views.nossa_equipe, name=\"nossa_equipe\"),\n    path(\"tratamentos/\", views.tratamentos, name=\"tratamentos\"),\n]",
        "detail": "home.urls",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "def index(request):\n    return render(request, \"index.html\")\ndef nossa_equipe(request):\n    return render(request, \"nossa_equipe.html\")\ndef tratamentos(request):\n    return render(request, \"tratamentos.html\")",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "nossa_equipe",
        "kind": 2,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "def nossa_equipe(request):\n    return render(request, \"nossa_equipe.html\")\ndef tratamentos(request):\n    return render(request, \"tratamentos.html\")",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "tratamentos",
        "kind": 2,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "def tratamentos(request):\n    return render(request, \"tratamentos.html\")",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "telemedicina_healing.healing.asgi",
        "description": "telemedicina_healing.healing.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "telemedicina_healing.healing.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "telemedicina_healing.healing.settings",
        "description": "telemedicina_healing.healing.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-uh6um8rx-4-6c=5arkk_o^mu1rlfthcvp_*2#77&8pbyv379n-\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "telemedicina_healing.healing.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "telemedicina_healing.healing.settings",
        "description": "telemedicina_healing.healing.settings",
        "peekOfCode": "SECRET_KEY = \"django-insecure-uh6um8rx-4-6c=5arkk_o^mu1rlfthcvp_*2#77&8pbyv379n-\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "telemedicina_healing.healing.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "telemedicina_healing.healing.settings",
        "description": "telemedicina_healing.healing.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "telemedicina_healing.healing.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "telemedicina_healing.healing.settings",
        "description": "telemedicina_healing.healing.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"usuarios.apps.UsuariosConfig\",",
        "detail": "telemedicina_healing.healing.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "telemedicina_healing.healing.settings",
        "description": "telemedicina_healing.healing.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"usuarios.apps.UsuariosConfig\",\n    \"medico.apps.MedicoConfig\",\n]",
        "detail": "telemedicina_healing.healing.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "telemedicina_healing.healing.settings",
        "description": "telemedicina_healing.healing.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]\nROOT_URLCONF = \"healing.urls\"",
        "detail": "telemedicina_healing.healing.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "telemedicina_healing.healing.settings",
        "description": "telemedicina_healing.healing.settings",
        "peekOfCode": "ROOT_URLCONF = \"healing.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [os.path.join(BASE_DIR, \"templates\")],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "telemedicina_healing.healing.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "telemedicina_healing.healing.settings",
        "description": "telemedicina_healing.healing.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [os.path.join(BASE_DIR, \"templates\")],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "telemedicina_healing.healing.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "telemedicina_healing.healing.settings",
        "description": "telemedicina_healing.healing.settings",
        "peekOfCode": "WSGI_APPLICATION = \"healing.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# Password validation",
        "detail": "telemedicina_healing.healing.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "telemedicina_healing.healing.settings",
        "description": "telemedicina_healing.healing.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "telemedicina_healing.healing.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "telemedicina_healing.healing.settings",
        "description": "telemedicina_healing.healing.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "telemedicina_healing.healing.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "telemedicina_healing.healing.settings",
        "description": "telemedicina_healing.healing.settings",
        "peekOfCode": "LANGUAGE_CODE = \"pt-br\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"/static/\"\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, \"templates/static\"),)\n# STATIC_ROOT = os.path.join(\"static\")\n# quando os usuarios fazem upload",
        "detail": "telemedicina_healing.healing.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "telemedicina_healing.healing.settings",
        "description": "telemedicina_healing.healing.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"/static/\"\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, \"templates/static\"),)\n# STATIC_ROOT = os.path.join(\"static\")\n# quando os usuarios fazem upload\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")",
        "detail": "telemedicina_healing.healing.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "telemedicina_healing.healing.settings",
        "description": "telemedicina_healing.healing.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"/static/\"\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, \"templates/static\"),)\n# STATIC_ROOT = os.path.join(\"static\")\n# quando os usuarios fazem upload\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nMEDIA_URL = \"/media/\"",
        "detail": "telemedicina_healing.healing.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "telemedicina_healing.healing.settings",
        "description": "telemedicina_healing.healing.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"/static/\"\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, \"templates/static\"),)\n# STATIC_ROOT = os.path.join(\"static\")\n# quando os usuarios fazem upload\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nMEDIA_URL = \"/media/\"\n# Default primary key field type",
        "detail": "telemedicina_healing.healing.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "telemedicina_healing.healing.settings",
        "description": "telemedicina_healing.healing.settings",
        "peekOfCode": "STATIC_URL = \"/static/\"\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, \"templates/static\"),)\n# STATIC_ROOT = os.path.join(\"static\")\n# quando os usuarios fazem upload\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nMEDIA_URL = \"/media/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# Messages",
        "detail": "telemedicina_healing.healing.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "telemedicina_healing.healing.settings",
        "description": "telemedicina_healing.healing.settings",
        "peekOfCode": "STATICFILES_DIRS = (os.path.join(BASE_DIR, \"templates/static\"),)\n# STATIC_ROOT = os.path.join(\"static\")\n# quando os usuarios fazem upload\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nMEDIA_URL = \"/media/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# Messages\nfrom django.contrib.messages import constants",
        "detail": "telemedicina_healing.healing.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "telemedicina_healing.healing.settings",
        "description": "telemedicina_healing.healing.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nMEDIA_URL = \"/media/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# Messages\nfrom django.contrib.messages import constants\nMESSAGE_TAGS = {\n    constants.DEBUG: \"alert-primary\",\n    constants.ERROR: \"alert-danger\",",
        "detail": "telemedicina_healing.healing.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "telemedicina_healing.healing.settings",
        "description": "telemedicina_healing.healing.settings",
        "peekOfCode": "MEDIA_URL = \"/media/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# Messages\nfrom django.contrib.messages import constants\nMESSAGE_TAGS = {\n    constants.DEBUG: \"alert-primary\",\n    constants.ERROR: \"alert-danger\",\n    constants.SUCCESS: \"alert-success\",",
        "detail": "telemedicina_healing.healing.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "telemedicina_healing.healing.settings",
        "description": "telemedicina_healing.healing.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# Messages\nfrom django.contrib.messages import constants\nMESSAGE_TAGS = {\n    constants.DEBUG: \"alert-primary\",\n    constants.ERROR: \"alert-danger\",\n    constants.SUCCESS: \"alert-success\",\n    constants.INFO: \"alert-info\",\n    constants.WARNING: \"alert-warning\",\n}",
        "detail": "telemedicina_healing.healing.settings",
        "documentation": {}
    },
    {
        "label": "MESSAGE_TAGS",
        "kind": 5,
        "importPath": "telemedicina_healing.healing.settings",
        "description": "telemedicina_healing.healing.settings",
        "peekOfCode": "MESSAGE_TAGS = {\n    constants.DEBUG: \"alert-primary\",\n    constants.ERROR: \"alert-danger\",\n    constants.SUCCESS: \"alert-success\",\n    constants.INFO: \"alert-info\",\n    constants.WARNING: \"alert-warning\",\n}",
        "detail": "telemedicina_healing.healing.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "telemedicina_healing.healing.urls",
        "description": "telemedicina_healing.healing.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path(\"usuarios/\", include(\"usuarios.urls\")),\n    path(\"medicos/\", include(\"medico.urls\")),\n]",
        "detail": "telemedicina_healing.healing.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "telemedicina_healing.healing.wsgi",
        "description": "telemedicina_healing.healing.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "telemedicina_healing.healing.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "telemedicina_healing.medico.migrations.0001_initial",
        "description": "telemedicina_healing.medico.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Especialidades',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('especialidade', models.CharField(max_length=50)),",
        "detail": "telemedicina_healing.medico.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "telemedicina_healing.medico.migrations.0002_dadosmedico",
        "description": "telemedicina_healing.medico.migrations.0002_dadosmedico",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('medico', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='DadosMedico',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "telemedicina_healing.medico.migrations.0002_dadosmedico",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "telemedicina_healing.medico.migrations.0003_dadosmedico_especialidades",
        "description": "telemedicina_healing.medico.migrations.0003_dadosmedico_especialidades",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('medico', '0002_dadosmedico'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='dadosmedico',\n            name='especialidades',\n            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='medico.especialidades'),\n        ),",
        "detail": "telemedicina_healing.medico.migrations.0003_dadosmedico_especialidades",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "telemedicina_healing.medico.migrations.0004_rename_crm_dadosmedico_crm",
        "description": "telemedicina_healing.medico.migrations.0004_rename_crm_dadosmedico_crm",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('medico', '0003_dadosmedico_especialidades'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='dadosmedico',\n            old_name='CRM',\n            new_name='crm',\n        ),",
        "detail": "telemedicina_healing.medico.migrations.0004_rename_crm_dadosmedico_crm",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "telemedicina_healing.medico.migrations.0005_rename_cedulas_identidade_medica_dadosmedico_cedula_identidade_medica_and_more",
        "description": "telemedicina_healing.medico.migrations.0005_rename_cedulas_identidade_medica_dadosmedico_cedula_identidade_medica_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('medico', '0004_rename_crm_dadosmedico_crm'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='dadosmedico',\n            old_name='cedulas_identidade_medica',\n            new_name='cedula_identidade_medica',\n        ),",
        "detail": "telemedicina_healing.medico.migrations.0005_rename_cedulas_identidade_medica_dadosmedico_cedula_identidade_medica_and_more",
        "documentation": {}
    },
    {
        "label": "MedicoConfig",
        "kind": 6,
        "importPath": "telemedicina_healing.medico.apps",
        "description": "telemedicina_healing.medico.apps",
        "peekOfCode": "class MedicoConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'medico'",
        "detail": "telemedicina_healing.medico.apps",
        "documentation": {}
    },
    {
        "label": "Especialidades",
        "kind": 6,
        "importPath": "telemedicina_healing.medico.models",
        "description": "telemedicina_healing.medico.models",
        "peekOfCode": "class Especialidades(models.Model):\n    especialidade = models.CharField(max_length=50)\n    # Pesquisar\n    def __str__(self):\n        return self.especialidade\nclass DadosMedico(models.Model):\n    crm = models.CharField(max_length=30)\n    nome = models.CharField(max_length=100)\n    cep = models.CharField(max_length=15)\n    rua = models.CharField(max_length=100)",
        "detail": "telemedicina_healing.medico.models",
        "documentation": {}
    },
    {
        "label": "DadosMedico",
        "kind": 6,
        "importPath": "telemedicina_healing.medico.models",
        "description": "telemedicina_healing.medico.models",
        "peekOfCode": "class DadosMedico(models.Model):\n    crm = models.CharField(max_length=30)\n    nome = models.CharField(max_length=100)\n    cep = models.CharField(max_length=15)\n    rua = models.CharField(max_length=100)\n    bairro = models.CharField(max_length=100)\n    numero = models.IntegerField()\n    # o rg, cim e foto de perfil sao imagens que o campo vai receber, upload_to vai para a pasta /media/ que a gente ja configurou no settings.py no core do projeto e em cada pasta tera uma outra pasta com nome diferente\n    rg = models.ImageField(upload_to=\"rgs\")\n    cedula_identidade_medica = models.ImageField(upload_to=\"cim\")",
        "detail": "telemedicina_healing.medico.models",
        "documentation": {}
    },
    {
        "label": "is_medico",
        "kind": 2,
        "importPath": "telemedicina_healing.medico.models",
        "description": "telemedicina_healing.medico.models",
        "peekOfCode": "def is_medico(user):\n    return DadosMedico.objects.filter(user=user).exists\nclass Especialidades(models.Model):\n    especialidade = models.CharField(max_length=50)\n    # Pesquisar\n    def __str__(self):\n        return self.especialidade\nclass DadosMedico(models.Model):\n    crm = models.CharField(max_length=30)\n    nome = models.CharField(max_length=100)",
        "detail": "telemedicina_healing.medico.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "telemedicina_healing.medico.urls",
        "description": "telemedicina_healing.medico.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"cadastro_medico/\", views.cadastro_medico, name=\"cadastro_medico\"),\n]",
        "detail": "telemedicina_healing.medico.urls",
        "documentation": {}
    },
    {
        "label": "cadastro_medico",
        "kind": 2,
        "importPath": "telemedicina_healing.medico.views",
        "description": "telemedicina_healing.medico.views",
        "peekOfCode": "def cadastro_medico(request):\n    # puxa da função do models.py e verifica se o usuario ja é medico e não permite ele criar um novo perfil de medico se ja for\n    if is_medico(request.user):\n        messages.add_message(request, constants.WARNING, \"Você já é médico!\")\n        return redirect(\"/medicos/abrir_horario\")\n    if request.method == \"GET\":\n        # acessa os dados da tablea Especialidades do banco de dados e devolve todos os dados para a variavel especialidade, fazendo assim que possamos usar esse dados no template\n        especialidades = Especialidades.objects.all()\n        return render(\n            request, \"cadastro_medico.html\", {\"especialidades\": especialidades}",
        "detail": "telemedicina_healing.medico.views",
        "documentation": {}
    },
    {
        "label": "UsuariosConfig",
        "kind": 6,
        "importPath": "telemedicina_healing.usuarios.apps",
        "description": "telemedicina_healing.usuarios.apps",
        "peekOfCode": "class UsuariosConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'usuarios'",
        "detail": "telemedicina_healing.usuarios.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "telemedicina_healing.usuarios.urls",
        "description": "telemedicina_healing.usuarios.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"cadastro/\", views.cadastro, name=\"cadastro\"),\n    path(\"login/\", views.login_view, name=\"login\"),\n    path(\"logout/\", views.sair, name=\"sair\"),\n]",
        "detail": "telemedicina_healing.usuarios.urls",
        "documentation": {}
    },
    {
        "label": "cadastro",
        "kind": 2,
        "importPath": "telemedicina_healing.usuarios.views",
        "description": "telemedicina_healing.usuarios.views",
        "peekOfCode": "def cadastro(request):\n    if request.method == \"GET\":\n        return render(request, \"cadastro.html\")\n    elif request.method == \"POST\":\n        # pega os dados do dicionario post do campo username la do cadastro.html\n        username = request.POST.get(\"username\")\n        # pega os dados do dicionario post do campo email la do cadastro.html\n        email = request.POST.get(\"email\")\n        # pega os dados do dicionario post do campo senha la do cadastro.html\n        senha = request.POST.get(\"senha\")",
        "detail": "telemedicina_healing.usuarios.views",
        "documentation": {}
    },
    {
        "label": "login_view",
        "kind": 2,
        "importPath": "telemedicina_healing.usuarios.views",
        "description": "telemedicina_healing.usuarios.views",
        "peekOfCode": "def login_view(request):\n    if request.method == \"GET\":\n        return render(request, \"login.html\")\n    elif request.method == \"POST\":\n        # pega os dados do dicionario post do campo username la do cadastro.html\n        username = request.POST.get(\"username\")\n        # pega os dados do dicionario post do campo senha la do cadastro.html\n        senha = request.POST.get(\"senha\")\n        # verifica no banco de dados se as credenciais username e senha existem nele, se exister ele retorna uma instancia do usuario para a variavel user, caso não, vai retornar none\n        user = auth.authenticate(request, username=username, password=senha)",
        "detail": "telemedicina_healing.usuarios.views",
        "documentation": {}
    },
    {
        "label": "sair",
        "kind": 2,
        "importPath": "telemedicina_healing.usuarios.views",
        "description": "telemedicina_healing.usuarios.views",
        "peekOfCode": "def sair(request):\n    auth.logout(request)\n    return redirect(\"/usuarios/login\")",
        "detail": "telemedicina_healing.usuarios.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "telemedicina_healing.manage",
        "description": "telemedicina_healing.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'healing.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "telemedicina_healing.manage",
        "documentation": {}
    },
    {
        "label": "UsuariosConfig",
        "kind": 6,
        "importPath": "usuarios.apps",
        "description": "usuarios.apps",
        "peekOfCode": "class UsuariosConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"usuarios\"",
        "detail": "usuarios.apps",
        "documentation": {}
    },
    {
        "label": "cadastrar",
        "kind": 2,
        "importPath": "usuarios.views",
        "description": "usuarios.views",
        "peekOfCode": "def cadastrar(request):\n    return render(request, \"cadastrar.html\")",
        "detail": "usuarios.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"core.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]